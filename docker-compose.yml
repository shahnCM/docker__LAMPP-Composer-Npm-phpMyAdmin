version: '3.3'

services:

    # PHP Cli
    php: 
        container_name: php_cli
        image: php:7.3-cli
        restart: 'no'
        working_dir: /var/www/html
        volumes: 
            - ./:/var/www/html
        entrypoint: ['php']    
        networks: 
            fullstack:
                aliases: 
                    - php   

    # DATABASE
    db: 
        container_name: mysql8
        image: mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        restart: 'always'
        environment: 
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: test_db
            MYSQL_USER: devuser
            MYSQL_PASSWORD: devpass
        ports:
            - 6033:3306
        networks: 
            fullstack:
                aliases: 
                    - db

    # PHP MyAdmin
    phpmyadmin: 
        container_name: php_myadmin
        depends_on: 
            - db
        image: phpmyadmin/phpmyadmin
        restart: 'always'
        environment: 
            MYSQL_ROOT_PASSWORD: root
            PMA_HOST: db
            PMA_PORT: 3306
            PMA_ARBITARY: 1
        ports: 
            - 8080:80
        networks: 
            fullstack:
                aliases: 
                    - phpmyadmin 

    # Apache WEB Server on Php 7.3.3
    web:
        container_name: apache_php73
        depends_on: 
            - db
        build:
            context: ./    
            dockerfile: Dockerfile
        working_dir: /var/www/html
        volumes: 
            - ./:/var/www/html/
        ports: 
            - 8000:80
        networks: 
            fullstack:
                aliases: 
                    - web           

    # COMPOSER 1.9
    composer:
        container_name: composer_19
        depends_on: 
            - web
        image: composer:latest
        restart: 'no'
        working_dir: /var/www/html
        volumes: 
            - ./:/var/www/html
        # command: ['composer', 'install']     
        entrypoint: ['composer'] 
        networks: 
            fullstack:
                aliases: 
                    - composer  

    # NodeJs 14 with NPM
    node: 
        container_name: node_14
        depends_on: 
            - web
        image: node:14
        restart: 'no'
        working_dir: /var/www/html
        volumes: 
            - ./:/var/www/html
        command: ['npm', 'install']
        entrypoint: ['npm']    
        networks: 
            fullstack:
                aliases: 
                    - node

    # ARTISAN ; Uncomment only if './' has an existing Laravel Project
    # artisan:
    #     build:
    #         context: ./
    #         dockerfile: Dockerfile
    #     container_name: artisan
    #     depends_on:
    #         - db
    #     working_dir: /var/www/html/
    #     volumes:
    #         - ./:/var/www/html
    #     entrypoint: ['/var/www/html/artisan']
    #     networks: 
    #         fullstack:
    #             aliases: 
    #                 - artisan 
                
# NETWORKS: 
networks:
    fullstack: 
        name: local                
