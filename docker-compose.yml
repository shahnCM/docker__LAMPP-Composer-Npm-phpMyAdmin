version: '3.3'

services:

    # PHP My Admin
    phpmyadmin: 
        container_name: phpmyadmin
        depends_on: 
            - mysql
        image: phpmyadmin/phpmyadmin
        restart: 'always'
        environment: 
            MYSQL_ROOT_PASSWORD: root
            PMA_HOST: mysql
            PMA_PORT: 3306
            PMA_ARBITARY: 1
        ports: 
            - 8080:80
        networks: 
            fullstack:
                aliases: 
                    - phpmyadmin      

    # DATABASE
    mysql: 
        container_name: mysql8
        image: mysql:8.0
        command: --default-authentication-plugin=mysql_native_password
        restart: unless-stopped
        tty: true
        environment: 
            MYSQL_ROOT_PASSWORD: root
            # MYSQL_DATABASE: test_db
            MYSQL_USER: root
            MYSQL_PASSWORD: root
        ports:
            - 3306:3306
        working_dir: /app
        volumes: 
            - ./${DIR}:/app      
        networks: 
            fullstack:
                aliases: 
                    - mysql   

    # NPM
    npm: 
        container_name: npm
        image: node:14.16-slim
        restart: 'no'
        working_dir: /app
        volumes: 
            - ./${DIR}:/app
        networks: 
            fullstack:
                aliases: 
                    - npm

    # PHP Cli
    php: 
        container_name: php
        restart: 'no'
        image: php:7.4.15-alpine
        working_dir: /app
        volumes:
            # - data:/app 
            - ./${DIR}:/app   
        networks: 
            fullstack:
                aliases: 
                    - php 
                    
    # COMPOSER
    composer:
        container_name: composer
        depends_on: 
            - php
        image: composer:1.9
        restart: 'no'
        working_dir: /app
        volumes: 
            - ./${DIR}:/app   
        entrypoint: ['composer'] 
        networks: 
            fullstack:
                aliases: 
                    - composer                     

    # Apache
    # apache:
    #     container_name: php73apache
    #     depends_on: 
    #         - db
    #     build:
    #         context: ./    
    #         dockerfile: Dockerfile
    #     working_dir: /var/www/html
    #     restart: 'always'
    #     volumes: 
    #         - ./${DIR}:/app
    #     ports: 
    #         - 8000:80   
    #     networks: 
    #         fullstack:
    #             aliases: 
    #                 - apache   

    # ARTISAN ; Uncomment only if './' has an existing Laravel Project
    # artisan:
    #    build:
    #        context: ./
    #        dockerfile: Dockerfile
    #    container_name: artisan
    #    working_dir: /app
    #    volumes:
    #        - ./${DIR}:/app
    #    entrypoint: ['/app/artisan']
    #    networks: 
    #        fullstack:
    #            aliases: 
    #                - artisan                        

# NETWORKS: 
networks:
    fullstack: 
        name: aio  
           
# DIR="projects/directory" docker-compose up -d
# docker-compose run -p 7000:7000 --rm npm bash
# docker-compose run -p 9000:9000 --rm php bash
# docker-compose run --rm composer 